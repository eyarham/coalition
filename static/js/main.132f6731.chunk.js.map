{"version":3,"sources":["_common/ExpandBox.js","_common/api.js","members/api.js","rules/api.js","user/api.js","admin/api.js","admin/rules/api.js","admin/rules/AddRow.js","admin/rules/RulesAdminRow.js","admin/rules/RulesAdmin.js","admin/Admin.js","auth/Logout.jsx","invite/api.js","coalition/api.js","browse/CoalitionEntry.js","browse/Browse.js","user/UserContextProvider.js","coalition/CoalitionContextProvider.js","invite/InviteLink.js","user/UserName.js","members/Members.js","message/api.js","message/Message.js","message/NewMessage.js","message/Messages.js","vote/api.js","petition/api.js","rules/RuleTypeDropdown.js","petition/PetitionField.js","petition/petitionTypes.js","petition/NewPetitionForm.js","petition/NewPetition.js","vote/Vote.js","petition/Status.js","petition/Petition.js","petition/PetitionList.js","petition/Petitions.js","roles/api.js","members/MemberDropdown.js","roles/NewRoleRow.js","roles/Role.js","roles/Roles.js","rules/NewRule.js","rules/NewRuleRow.js","rules/RuleEditCell.js","rules/Rules.js","user/UserMode.js","coalition/Charter.js","coalition/CoalitionLink.js","coalition/CoalitionName.js","coalition/Delete.js","coalition/Join.js","coalition/Leave.js","coalition/CoalitionWithContext.js","coalition/CoalitionPage.js","coalition/MyCoalitions.js","coalition/NewCoalition.js","coalition/CoalitionPanel.js","invite/Invite.js","rules/RulesPage.js","user/Account.js","_common/Home.jsx","auth/LogInPanel.js","auth/AuthPanel.js","auth/AuthWrapper.js","firebase/FirebaseConfig.js","firebase/FirebaseApp.js","_common/MenuAppBar.jsx","_common/Layout.js","_common/Router.js","App.js","reportWebVitals.js","index.js"],"names":["ExpandBox","headerText","children","useState","isOpen","setIsOpen","className","onClick","e","firebase","getAuth","collection","doc","getDoc","getFirestore","setDoc","deleteDoc","api","collectionString","getCurrentUser","currentUser","getDocRef","id","db","getCollection","getDocsSub","callback","a","coll","q","query","unsub","onSnapshot","snapshot","getById","docRef","getByIdSub","docSnapshot","createDoc","docToAdd","createdBy","uid","createdDate","Date","addDoc","set","data","deleteDocument","getByCoalitionId","coalitionId","where","getDocs","querySnapshot","docs","getByCoalitionIdSub","getOriginUrl","baseUrl","window","location","origin","add","memberId","newMembership","getCoalitionIdsForCurrentUser","getCurrentUserId","currentUserId","q2","membershipQuerySnapshot","coalitionIds","forEach","push","getAllByCoalitionIdInternal","getAllByCoalitionIdInternalSub","getAllByCoalitionId","getMemberCount","allMembers","length","getMemberCountSub","getIsOnlyUser","members","remove","membership","Error","getUserIsMemberSub","userId","snap","getUserIsMember","getIdNamePairSub","idNamePairs","memberFunc","map","m","user","displayName","Promise","all","getByCoalitionIdQuery","getByName","name","allByCoalition","filteredRules","filter","c","getByNameSub","error","err","create","value","newRule","createWithType","type","updateRule","ruleToUpdate","newData","checkRuleSub","ruleToCheck","initializeRules","isPublic","showUserNames","authId","newUserData","get","getByAuthId","getLoggedInUser","authUser","empty","getByAuthIdSub","onError","updateUserEmail","newEmail","pw","signInWithEmailAndPassword","email","updateEmail","valid","code","message","success","getUserNameSub","showUsersRule","userName","getUserPronouns","pronouns","getIsAdminUser","isAdmin","addSystemRule","rule","AddRow","setName","setType","defaultValue","setDefaultValue","details","setDetails","onAddClick","preventDefault","placeholder","onChange","target","RulesAdminRow","onClickDelete","RulesAdmin","rules","setRules","useEffect","r","i","Admin","setIsAdmin","effect","isAdminUser","Logout","auth","navigate","useNavigate","signOut","then","catch","newInvite","getByCoalition","newDocRef","inviteId","invite","accept","addMembership","getLink","inviteUrl","inviteLink","write","newCoalition","console","log","addMember","setCoalition","tenAtATime","subCoalitionIds","q3","snapshot3","iterator","n","current","l","end","part","slice","getFunction","resultArray","next","subArray","results","coalition","getByIdForUser","isCoalitionPublic","getCoalitionLink","getByInviteId","getInvite","inviteCoalition","updateCharter","charterText","openCoalition","coalitionToUpdate","charter","getRulesByCoalitionId","publicRuleArray","getPublic","publicCoalitionIds","docsResult","d","indexOf","joinPublic","CoalitionEntry","href","Browse","coalitions","setCoalitions","UserContext","createContext","UserContextProvider","setMessage","setUser","loggedInUser","setLoggedInUser","u","onAuthStateChanged","undefined","Provider","CoalitionContext","CoalitionContextProvider","useContext","setOpenCoalition","isOnlyUser","setIsOnlyUser","isCreator","setIsCreatorState","isMember","setIsMember","setFromParams","isOnlyUserResult","rulesResult","providerValue","InviteLink","setInviteLink","getInviteLink","navigator","clipboard","writeText","disabled","UserName","setPronouns","pronounResponse","Members","setMembers","text","postedBy","postedByCurrentUser","Message","isPostedByCurrent","setIsPostedByCurrent","createdDateString","setCreatedDateString","postedByCurrent","dateString","toDate","toLocaleDateString","timeString","toLocaleTimeString","onDeleteClick","NewMessage","setText","onSubmitMessage","onSubmit","Messages","coalitionContext","messages","setMessages","showNewMessage","setShowNewMessage","coalitionMessages","sortedMessages","sort","b","submitVote","petitionId","selection","getByPetitionIdForUser","existingVote","voteToUpdate","newVote","getByPetitionId","getByPetitionIdSub","create2","petitionType","getVotesNeeded","votesNeeded","newPetition","status","updateStatus","petition","processPetition","changedStatus","assessPetitionVotes","checkReady","completePetition","votes","yesVotes","v","memberCount","votesNeededRule","getVotesNeededSub","unsub2","ruleName","RuleTypeDropdown","onTypeChange","PetitionField","field","updateFormValue","fieldType","booleanValue","setBooleanValue","onInputChange","updateForm","newJsonValue","json","JSON","parse","newValue","petitionTypes","fields","NewPetitionForm","setPetitionDataParent","selectedPetitionType","setSelectedPetitionType","formValue","setFormValue","setFieldType","result","t","parseInt","newFieldValue","f","NewPetition","setPetitionType","petitionData","setPetitionData","onPetitionSubmit","newPetitionType","Vote","selectedVote","setSelectedVote","getByPetitionIdForUserSub","onVoteYes","onVoteNo","Status","setVotes","setVotesNeeded","noVotes","Petition","showVote","onProcessClick","dataValue","PetitionList","petitions","Petitions","setPetitions","p","openPetitions","passedPetitions","completedPetitions","readyPetitions","newDoc","MemberDropdown","onSelect","NewRoleRow","setMemberId","onClickAdd","Role","role","Roles","roles","setRoles","NewRule","setRuleName","ruleValue","setRuleValue","onFormSubmit","NewRuleRow","setValue","onRuleAddClick","targetValue","RuleEditCell","isInEditMode","setIsInEditMode","cellValue","setCellValue","displayValue","setDisplayValue","onBlur","Rules","ruleId","UserMode","Charter","setCharterText","onCharterSubmit","CoalitionLink","CoalitionName","Delete","deleteConfirm","setDeleteConfirm","Join","onClickJoin","Leave","showConfirm","setShowConfirm","errorMessage","setErrorMessage","onClickLeave","CoalitionWithContext","CoalitionPage","params","useParams","selectedCoalition","setSelectedCoalition","setCoalitionId","MyCoalitions","isDirty","setIsDirty","getCoalitionData","NewCoalition","newCoalitionName","setNewCoalitionName","setIsPublic","setShowUserNames","addCoalition","checked","CoalitionPanel","Invite","useSearchParams","searchParams","coalitionData","setCoalitionData","setInviteId","userIsMember","setUserIsMember","getData","onAcceptClick","RulesPage","Account","selectedAccount","setSelectedAccount","updatedDisplayName","setDisplayName","showUpdateEmail","setShowUpdateEmail","setNewEmail","showCredentialReq","setShowCredentialReq","setpw","effectFunc","account","onSubmitAccountSave","newAccount","onSubmitNewEmail","response","alert","autoFocus","Home","Box","LoginPanel","setEmail","password","setPassword","loginErrorMessage","setLoginErrorMessage","isMounted","setIsMounted","autoComplete","userCredential","createUserWithEmailAndPassword","AuthPanel","AuthWrapper","props","firebaseConfig","apiKey","_env_","FIREBASE_API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_APP_ID","app","initializeApp","FirebaseApp","pageLinks","isExternal","settingLinks","ResponsiveAppBar","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","userInitial","setUserInitial","charAt","navigateToSelected","destination","open","AppBar","position","Container","maxWidth","Toolbar","disableGutters","sx","display","xs","md","mr","Typography","variant","noWrap","component","fontFamily","fontWeight","letterSpacing","color","textDecoration","flexGrow","IconButton","size","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","page","MenuItem","textAlign","Button","my","Tooltip","title","Avatar","mt","Divider","setting","Layout","CssBaseline","MenuAppBar","Router","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132f6731.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './common.css';\n\nconst ExpandBox = ({ headerText, children }) => {\n  const [isOpen, setIsOpen] = useState();\n  const onHeaderClick = e => {\n    setIsOpen(!isOpen);\n  }\n  return (<div className='expand-box'>\n    <div className='expand-box-header' onClick={onHeaderClick}>{headerText}</div>\n    {isOpen && <div className='expand-box-children'>{children}</div>}\n  </div>);\n}\nexport default ExpandBox\n","import { getAuth } from \"firebase/auth\";\nimport { addDoc, collection, deleteDoc, doc, getDoc, getDocs, getFirestore, onSnapshot, query, setDoc, where } from \"firebase/firestore\";\n// Allows for better testing experience\nconst firebase = {\n  getAuth, collection, doc, getDoc, getFirestore, setDoc, deleteDoc\n}\n\nconst api = (collectionString) => {\n\n  const getCurrentUser = () => {\n    const auth = firebase.getAuth();\n    return auth.currentUser;\n  }\n  const getDocRef = (id) => {\n    const db = firebase.getFirestore();\n    return firebase.doc(db, collectionString, id);\n  }\n  const getCollection = () => {\n    const db = firebase.getFirestore();\n    return firebase.collection(db, collectionString);\n  }\n\n  const getDocsSub = async (callback) => {\n    const coll = getCollection();\n    const q = query(coll);\n    const unsub = onSnapshot(q, snapshot => {\n      callback(snapshot);\n    });\n    return unsub;\n  }\n  const getById = async id => {\n    const docRef = getDocRef(id);\n    return await firebase.getDoc(docRef);\n  }\n  const getByIdSub = async (id, callback) => {\n    const unsub = onSnapshot(getDocRef(id), (docSnapshot) => {\n      callback(docSnapshot);\n    });\n    return unsub;\n  }\n\n  const createDoc = async doc => {\n    const docToAdd = {\n      createdBy: getCurrentUser().uid,\n      createdDate: new Date(),\n      ...doc\n    }\n    return await addDoc(getCollection(), docToAdd);\n  }\n\n  const set = async (id, data) => {\n    await firebase.setDoc(getDocRef(id), data);\n    return await getById(id);\n  }\n\n  const deleteDocument = async id => {\n    await firebase.deleteDoc(getDocRef(id));\n  }\n\n  const getByCoalitionId = async coalitionId => {\n    const q = query(getCollection(), where(\"coalitionId\", \"==\", coalitionId));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs;\n  }\n\n  const getByCoalitionIdSub = (coalitionId, callback) => {\n    const q = query(getCollection(), where(\"coalitionId\", \"==\", coalitionId));\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      callback(querySnapshot.docs);\n    });\n    return unsub;\n  }\n  return { getCurrentUser, createDoc, getDocRef, getCollection, getById, set, deleteDocument, getByCoalitionId, getByCoalitionIdSub, getByIdSub, getDocsSub };\n}\nexport default api;\n\nconst getOriginUrl = () => {\n  const baseUrl = window.location.origin;\n  if (baseUrl === \"https://eyarham.github.io\") {\n    return baseUrl + \"/coalition\";\n  }\n  return baseUrl;\n}\nexport { getOriginUrl, firebase };\n\n","import { addDoc, deleteDoc, getDocs, onSnapshot, query, where } from \"firebase/firestore\";\nimport { getById, getCurrentUserId } from \"../user/api\";\nimport api from \"../_common/api\";\nconst { getDocRef, getCollection, getByCoalitionIdSub } = api(\"memberships\");\nconst add = async (coalitionId, memberId) => {\n\n  var newMembership = {\n    coalitionId,\n    memberId\n  }\n  await addDoc(getCollection(), newMembership);\n}\n\nconst getCoalitionIdsForCurrentUser = async () => {\n  const currentUserId = await getCurrentUserId();\n  const q2 = query(getCollection(), where(\"memberId\", \"==\", currentUserId));\n  const membershipQuerySnapshot = await getDocs(q2);\n  var coalitionIds = [];\n  membershipQuerySnapshot.forEach((doc) => {\n    coalitionIds.push(doc.data().coalitionId);\n  });\n  return coalitionIds;\n}\n\nconst getByCoalitionId = async (coalitionId) => {\n  const q2 = query(getCollection(), where(\"memberId\", \"==\", await getCurrentUserId()), where(\"coalitionId\", \"==\", coalitionId));\n  const membershipQuerySnapshot = await getDocs(q2);\n  return membershipQuerySnapshot.docs[0];\n}\n\nconst getAllByCoalitionIdInternal = async (coalitionId) => {\n  const q2 = query(getCollection(), where(\"coalitionId\", \"==\", coalitionId));\n  const membershipQuerySnapshot = await getDocs(q2);\n  return membershipQuerySnapshot.docs;\n}\nconst getAllByCoalitionIdInternalSub = async (coalitionId, callback) => {\n  const q2 = query(getCollection(), where(\"coalitionId\", \"==\", coalitionId));\n  return onSnapshot(q2, snapshot => {\n    callback(snapshot.docs);\n  })\n}\nconst getAllByCoalitionId = async (coalitionId) => {\n  return await getAllByCoalitionIdInternal(coalitionId);\n}\n\nconst getMemberCount = async (coalitionId) => {\n  const allMembers = await getAllByCoalitionId(coalitionId);\n  return allMembers.length;\n}\nconst getMemberCountSub = async (coalitionId, callback) => {\n  return getAllByCoalitionIdInternalSub(coalitionId, allMembers => {\n    callback(allMembers.length);\n  })\n}\n\nconst getIsOnlyUser = async (coalitionId) => {\n  const members = await getAllByCoalitionIdInternal(coalitionId);\n  if (members.length === 1 && members[0].data() && members[0].data().memberId === await getCurrentUserId()) {\n    return true;\n  }\n  return false;\n}\n\nconst remove = async (coalitionId) => {\n  const membership = await getByCoalitionId(coalitionId);\n  var memberCount = await getMemberCount(membership.data().coalitionId)\n  if (memberCount > 1) {\n    await deleteDoc(getDocRef(membership.id));\n  }\n  else {\n    throw new Error(\"Can not delete last member.\");\n  }\n}\nconst getUserIsMemberSub = async (userId, coalitionId, callback) => {\n  const q2 = query(getCollection(), where(\"memberId\", \"==\", userId), where(\"coalitionId\", \"==\", coalitionId));\n  const unsub = onSnapshot(q2, snap => {\n    if (snap && snap.docs && snap.docs.length > 0) {\n      callback(true);\n    }\n    else {\n      callback(false);\n    }\n  })\n  return unsub;\n}\n\nconst getUserIsMember = async (coalitionId) => {\n  const currentUserId = await getCurrentUserId();\n  const q2 = query(getCollection(), where(\"memberId\", \"==\", currentUserId), where(\"coalitionId\", \"==\", coalitionId));\n  const snap = await getDocs(q2);\n  if (snap && snap.docs && snap.docs.length > 0) {\n    return true\n  }\n  return false;\n}\n\nconst getIdNamePairSub = async (coalitionId, callback) => {\n  return getByCoalitionIdSub(coalitionId, async members =>  {\n    var idNamePairs = [];\n   const memberFunc =  members.map(async m => {\n      const { memberId } = m.data();\n      const user = await getById(memberId);\n      const {displayName} = user.data();      \n      idNamePairs.push({memberId, displayName});\n    })\n    await Promise.all(memberFunc);\n    callback(idNamePairs);\n  });\n}\n\nexport { add, getCoalitionIdsForCurrentUser, remove, getAllByCoalitionId, getMemberCount, getMemberCountSub, getByCoalitionId, getByCoalitionIdSub, getIsOnlyUser, getUserIsMember, getUserIsMemberSub, getIdNamePairSub };\n\n","import api from \"../_common/api\";\n\nconst { getByCoalitionId, getByCoalitionIdQuery, createDoc, set, getByCoalitionIdSub, deleteDocument } = api(\"rules\");\n\nconst getByName = async (coalitionId, name) => {\n  const allByCoalition = await getByCoalitionId(coalitionId);\n  const filteredRules = allByCoalition.filter(c => c.data().name === name);\n  if (filteredRules.length > 0)\n    return filteredRules[0];\n}\n\nconst getByNameSub = async (coalitionId, name, callback, error) => {\n  return getByCoalitionIdSub(coalitionId, async (allByCoalition) => {\n    const filteredRules = allByCoalition.filter(c => c.data().name === name);\n    if (filteredRules.length > 0) {\n      callback(filteredRules[0]);\n    }\n    else {\n      error(new Error(\"no such rule\"));\n    }\n  }, err =>\n    error(err));\n}\n\nconst create = async (coalitionId, name, value) => {\n  const newRule = {\n    coalitionId,\n    name,\n    value\n  }\n  await createDoc(newRule)\n}\n\n\nconst createWithType = async (coalitionId, name, type, value) => {\n  const newRule = {\n    coalitionId,\n    name,\n    type,\n    value\n  }\n  await createDoc(newRule)\n}\n\nconst updateRule = async (coalitionId, name, value) => {\n  //get rule\n  const ruleToUpdate = await getByName(coalitionId, name);\n  //update values\n  const newData = { ...ruleToUpdate.data(), value };\n  //save rule\n  await set(ruleToUpdate.id, newData);\n}\n\nconst checkRule = async (coalitionId, name, value) => {\n  const ruleToCheck = await getByName(coalitionId, name);\n  if (ruleToCheck) {\n    return ruleToCheck.data().value === value;\n  }\n}\n\nconst checkRuleSub = async (coalitionId, name, value, callback, error) => {\n  return getByNameSub(coalitionId, name, (ruleToCheck) => {\n    if (ruleToCheck) {\n      callback(ruleToCheck.data().value === value);\n    }\n  }, err => {\n   error && error(err);\n  });\n}\n\nconst initializeRules = async (coalitionId, isPublic, showUserNames) => {\n  await create(coalitionId, \"Public\", isPublic);\n  await create(coalitionId, \"ShowUserNames\", showUserNames);\n}\n\nexport { getByCoalitionId, updateRule, getByCoalitionIdQuery, getByCoalitionIdSub, checkRule, getByName, getByNameSub, checkRuleSub, initializeRules, deleteDocument, createWithType };\n\n","import { getAuth, signInWithEmailAndPassword, updateEmail } from \"firebase/auth\";\nimport { addDoc, getDoc, getDocs, onSnapshot, query, where } from \"firebase/firestore\";\nimport { getAllByCoalitionId } from \"../members/api\";\nimport { checkRule, checkRuleSub } from \"../rules/api\";\nimport api from \"../_common/api\";\n\nconst { getCurrentUser, getCollection, set, getById, getByIdSub } = api(\"users\");\n\nconst create = async (authId) => {\n  var newUserData = {\n    userId: authId,\n    authId: authId,\n    displayName: '',\n    createdBy: getCurrentUser().uid\n  };\n  const docRef = await addDoc(getCollection(), newUserData);\n  return await getDoc(docRef);\n}\n\nconst get = async () => {\n  const user = getCurrentUser();\n  return await getByAuthId(user.uid);\n}\n\nconst getLoggedInUser = async () => {\n  const authUser = getCurrentUser();\n  const user = await getByAuthId(authUser.uid);\n  return user;\n}\n\nconst getCurrentUserId = async () => {\n  const authUser = getCurrentUser();\n  const user = await getByAuthId(authUser.uid);\n  return user.id;\n}\n\nconst getByAuthId = async (id) => {\n  const q2 = query(getCollection(), where(\"userId\", \"==\", id));\n  const membershipQuerySnapshot = await getDocs(q2);\n  if (membershipQuerySnapshot.empty) return await getDoc(create(id));\n  return membershipQuerySnapshot.docs[0];\n}\nconst getByAuthIdSub = async (id, callback, onError) => {\n  const q = query(getCollection(), where(\"userId\", \"==\", id));\n  // const membershipQuerySnapshot = await getDocs(q2);\n  // if (membershipQuerySnapshot.empty) return await getDoc(create(id));\n  //return membershipQuerySnapshot.docs[0];\n\n  const unsub = onSnapshot(q, snapshot => {\n    const user = snapshot.docs[0];\n    callback(user);\n  }, error => {\n    onError(error)\n  });\n  return unsub;\n}\nconst getByCoalitionId = async (coalitionId) => {\n  const memberships = await getAllByCoalitionId(coalitionId);\n  if (memberships && memberships.length > 0) {\n    const memberUsers = await Promise.all(memberships.map(async (m, i) => {\n      const user = await getById(m.data().memberId);\n      return user;\n    }));\n    return memberUsers;\n  }\n}\n\nconst updateUserEmail = async (newEmail, pw) => {\n  const user = getCurrentUser();\n  if (pw !== \"\") {\n    await signInWithEmailAndPassword(getAuth(), user.email, pw);\n  }\n  try {\n    await updateEmail(user, newEmail);\n    return { valid: true };\n  } catch (e) {\n    switch (e.code) {\n      case 'auth/invalid-email':\n        return {\n          valid: false, message: \"Please enter a valid email address.\"\n        }\n      case 'auth/email-already-in-use':\n        return {\n          valid: false, message: \"This email is already in use. \\nIf you did not create an account with this email, please contact the site administrator.\"\n        }\n      case 'auth/requires-recent-login':\n        return {\n          valid: null\n        }\n      default:\n        return {\n          success: false, message: e.code\n        }\n    }\n  }\n}\n\nconst getUserName = async (userId, coalitionId) => {\n  if (!userId) return;\n  const showUsersRule = await checkRule(coalitionId, \"ShowUserNames\", \"true\");\n  if (showUsersRule) {\n    const user = await getById(userId);\n    const userName = user.data().displayName\n    return userName;\n  }\n  return \"Anonymous\";\n}\nconst getUserNameSub = async (userId, coalitionId, callback) => {\n  if (!userId) return;\n  return checkRuleSub(coalitionId, \"ShowUserNames\", true, async (showUsersRule) => {\n    if (showUsersRule) {\n      return getByIdSub(userId, (user) => {\n        const userName = user.data() && user.data().displayName\n        callback(userName);\n      })\n    }\n    callback(\"Anonymous\");\n  });\n}\n\nconst getUserPronouns = async (userId) => {\n  if (!userId) return;\n  const user = await getById(userId);\n  return user.data() && user.data().pronouns;\n}\n\nexport { create, get, set, getByCoalitionId, updateUserEmail, getUserName, getCurrentUserId, getUserPronouns, getUserNameSub, getLoggedInUser, getByAuthIdSub, getById };\n\n","import { getLoggedInUser } from \"../user/api\";\n\nconst getIsAdminUser = async () => {\n  const user = await getLoggedInUser();\n  const { isAdmin } = user.data();\n  return isAdmin === true;\n}\n\nexport { getIsAdminUser };\n\n","import api from \"../../_common/api\";\n\nconst { createDoc, deleteDocument, getDocsSub } = api(\"systemRules\");\nconst addSystemRule = async (rule) => {\n  const newRule = { ...rule };\n  await createDoc(newRule);\n}\nexport { addSystemRule, deleteDocument, getDocsSub };\n\n","import React, { useState } from 'react';\nimport { addSystemRule } from './api';\n\nconst AddRow = () => {\n  const [name, setName] = useState();\n  const [type, setType] = useState();\n  const [defaultValue, setDefaultValue] = useState();\n  const [details, setDetails] = useState();\n  const onNameChange = e => {\n    setName(e.target.value);\n  }\n  const onTypeChange = e => {\n    setType(e.target.value);\n  }\n  const onDefaultValueChange = e => {\n    setDefaultValue(e.target.value);\n  }\n  const onDetailsChange = e => {\n    setDetails(e.target.value);\n  }\n  const onAddClick = async e => {\n    e.preventDefault();\n    const rule = {\n      name,\n      type,\n      defaultValue,\n      details\n    }\n    await addSystemRule(rule);\n  }\n  return (\n    <tr>\n      <td><input placeholder='name' onChange={onNameChange} /></td>\n      <td><input placeholder='type' onChange={onTypeChange} /></td>\n      <td><input placeholder='defaultValue' onChange={onDefaultValueChange} /></td>\n      <td><input placeholder='details' onChange={onDetailsChange} /></td>\n      <td><input type=\"button\" value=\"Add\" onClick={onAddClick} /></td>\n    </tr>\n  )\n}\n\nexport default AddRow","import React from 'react';\nimport { deleteDocument } from './api';\n\nconst RulesAdminRow = ({ rule, isAdmin }) => {\n  const { name, type, defaultValue, details } = rule.data();\n  const onClickDelete = async e=>{\n    e.preventDefault();\n    await deleteDocument(rule.id)\n  }\n  return (<tr >\n    <td>{name}</td>\n    <td>{type}</td>\n    <td>{defaultValue}</td>\n    <td>{details}</td>\n    {isAdmin && <td><input type=\"button\" value=\"delete\" onClick={onClickDelete}></input></td>}\n  </tr>);\n}\n\nexport default RulesAdminRow","import React, { useEffect, useState } from 'react';\nimport AddRow from './AddRow';\nimport { getDocsSub } from './api';\nimport RulesAdminRow from './RulesAdminRow';\n\nconst RulesAdmin = ({ isAdmin }) => {\n  const [rules, setRules] = useState();\n\n  useEffect(() => {\n    return getDocsSub(snap => {\n      setRules(snap.docs);\n    }\n    );\n  }, [])\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>name</th>\n            <th>type</th>\n            <th>default value</th>\n            <th>details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rules &&\n            rules.map((r, i) =>\n              <RulesAdminRow key={i} rule={r} isAdmin={isAdmin} />\n            )}\n          {isAdmin && <AddRow />}\n\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default RulesAdmin","import React, { useEffect, useState } from 'react';\nimport ExpandBox from '../_common/ExpandBox';\nimport { getIsAdminUser } from './api';\nimport RulesAdmin from './rules/RulesAdmin';\n\nconst Admin = () => {\n  const [isAdmin, setIsAdmin] = useState();\n  useEffect(() => {\n    const effect = async () => {\n      const isAdminUser = await getIsAdminUser();\n      setIsAdmin(isAdminUser);\n    }\n    effect();\n  }, []);\n\n  if (!isAdmin) return <div>You are not an admin</div>;\n  return (\n    <div>\n      <h3>Admin</h3>\n      <ExpandBox headerText=\"Rules Admin\"><RulesAdmin isAdmin={isAdmin}/></ExpandBox>\n    </div>\n  )\n}\n\nexport default Admin\n","import React, {useEffect} from 'react'\nimport { getAuth, signOut } from \"firebase/auth\";\n\nimport { useNavigate } from 'react-router-dom';\nconst Logout = () => {\n  const auth = getAuth();\n\n  const navigate = useNavigate();\n  const signOutEvent = () => {\n    signOut(auth).then(() => {\n      // Sign-out successful.\n      navigate('/');\n    }).catch((error) => {\n      // An error happened.\n    });\n  }\n  useEffect(signOutEvent);\n  return (\n    <div>Logout</div>\n  )\n}\n\nexport default Logout","import { addDoc, getDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { add as addMembership, getByCoalitionId } from \"../members/api\";\nimport { getCurrentUserId } from \"../user/api\";\nimport api, { getOriginUrl } from \"../_common/api\";\n\nconst { getDocRef, getCollection } = api(\"invites\");\nconst sendInvite = (inviteEmail) => {\n\n}\n\nconst create = async (coalitionId, memberId) => {\n  var newInvite = {\n    coalitionId,\n    memberId\n  };\n  const docRef = await addDoc(getCollection(), newInvite);\n  return docRef;\n}\n\nconst getByCoalition = async (coalitionId) => {\n  const q2 = query(getCollection(), where(\"memberId\", \"==\", await getCurrentUserId()), where(\"coalitionId\", \"==\", coalitionId));\n  const membershipQuerySnapshot = await getDocs(q2);\n  if (membershipQuerySnapshot.empty) {\n    const newDocRef = await create(coalitionId, await getCurrentUserId());\n    return newDocRef;\n  }\n  else {\n    return membershipQuerySnapshot.docs[0];\n  }\n}\n\nconst get = async (inviteId) => {\n  const docRef = getDocRef(inviteId);\n  const invite = await getDoc(docRef);\n  return invite;\n\n}\n\nconst accept = async (inviteId) => {\n  const invite = await get(inviteId);\n  //check existing\n  const { coalitionId } = invite.data();\n  const existingMembership = await getByCoalitionId(coalitionId);\n  if (existingMembership) {\n    //\n  }\n  else {\n    await addMembership(coalitionId, await getCurrentUserId());\n  }\n}\n\nconst getLink = async (coalitionId) => {\n  const baseUrl = getOriginUrl();\n  const inviteUrl = \"/#/invite\";\n  const invite = await getByCoalition(coalitionId);\n  const inviteId = invite.id;\n  const query = \"?id=\" + inviteId;\n  const inviteLink = baseUrl + inviteUrl + query;\n  return inviteLink;\n}\n\nexport { sendInvite, get, create, accept, getByCoalition, getLink };\n\n","import { addDoc, getDoc, getDocs, query, setDoc, where } from \"firebase/firestore\";\nimport { get as getInvite } from \"../invite/api\";\nimport { add as addMember, getByCoalitionId, getCoalitionIdsForCurrentUser } from \"../members/api\";\nimport { getByCoalitionId as getRulesByCoalitionId, initializeRules } from '../rules/api';\nimport { getCurrentUserId } from \"../user/api\";\nimport api, { getOriginUrl } from \"../_common/api\";\n\nconst { getDocRef, getCollection, deleteDocument } = api(\"coalitions\");\n\nconst write = async (name, isPublic, showUserNames) => {\n  try {\n    var newCoalition = {\n      name,\n      createdBy: await getCurrentUserId()\n    }\n    const docRef = await addDoc(getCollection(), newCoalition);\n    console.log(\"Document written with ID: \", docRef.id);\n    await initializeRules(docRef.id, isPublic, showUserNames);\n    await addMember(docRef.id, await getCurrentUserId());\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n}\n\nconst setCoalition = async (id, data) => {\n  await setDoc(getDocRef(id), data);\n  return await getById(id);\n}\nconst get = async () => {\n  const coalitionIds = await getCoalitionIdsForCurrentUser();\n  return tenAtATime(coalitionIds, async (subCoalitionIds) => {\n    if (subCoalitionIds.length === 0) return [];\n    const q3 = query(getCollection(), where(\"__name__\", \"in\", subCoalitionIds));\n    const snapshot3 = await getDocs(q3);\n    return snapshot3.docs;\n  })\n\n}\nvar iterator = function (a, n) {\n  var current = 0,\n    l = a.length;\n  return function () {\n    if (current === -1) return [];\n    var end = current + n;\n    var part = a.slice(current, end);\n    current = end < l ? end : -1;\n    return part;\n  };\n};\nconst tenAtATime = async (coalitionIds, getFunction) => {\n  var resultArray = [];\n  var next = iterator(coalitionIds, 10);\n  for (var i = 0; i < 10; i++) {\n    var subArray = next();\n    var results = await getFunction(subArray);\n    resultArray.push(...results);\n  }\n  return resultArray;\n}\n\nconst getAll = async () => {\n  const querySnapshot = await getDocs(getCollection());\n  return querySnapshot.docs;\n}\n\nconst getById = async (id) => {\n  const docRef = getDocRef(id);\n  const coalition = await getDoc(docRef);\n  return coalition;\n}\n\nconst getByIdForUser = async (id) => {\n  const membership = await getByCoalitionId(id);\n  const coalition = await getById(id);\n  if (membership) return coalition;\n  const isPublic = await isCoalitionPublic(coalition);\n  if (isPublic) return coalition\n  throw new Error(\"Coalition does not exist or user is not a member.\");\n}\n\nconst getCoalitionLink = (coalitionId) => {\n  const coalitionUrl = \"/#/coalition/\";\n  const link = getOriginUrl() + coalitionUrl + coalitionId;\n  return link;\n}\nconst getCoalitionRedirect = (coalitionId) => {\n  const coalitionUrl = \"/coalition/\";\n  const link = coalitionUrl + coalitionId;\n  return link;\n}\n\nconst getByInviteId = async (inviteId) => {\n\n  var invite = await getInvite(inviteId);\n  var inviteCoalition = await getById(invite.data().coalitionId);\n  return inviteCoalition\n}\n\nconst updateCharter = async (coalitionId, charterText) => {\n  const openCoalition = await getByIdForUser(coalitionId);\n  const coalitionToUpdate = { ...openCoalition.data(), charter: charterText }\n  await setCoalition(openCoalition.id, coalitionToUpdate);\n}\n\nconst isCoalitionPublic = async (coalition) => {\n  const rules = await getRulesByCoalitionId(coalition.id);\n  if (rules && rules.length > 0) {\n    const publicRuleArray = rules.filter(r => r.data().name === \"Public\");\n    if (publicRuleArray && publicRuleArray.length === 1) {\n      const publicRule = publicRuleArray[0];\n      if (publicRule.data().value === true) { return true };\n    }\n  }\n  return false;\n}\n\nconst getPublic = async () => {\n  const querySnapshot = await getDocs(getCollection());\n  const docs = querySnapshot.docs;\n  const publicCoalitionIds = [];\n  await Promise.all(docs.map(async (doc) => {\n    if (await isCoalitionPublic(doc)) {\n      publicCoalitionIds.push(doc.id);\n      return doc;\n    }\n  }));\n  const docsResult = docs.filter(d => publicCoalitionIds.indexOf(d.id) > -1);\n  return docsResult;\n}\n\nconst joinPublic = async (coalition) => {\n  const isPublic = await isCoalitionPublic(coalition);\n  if (isPublic === true) {\n    await addMember(coalition.id, await getCurrentUserId());\n  }\n}\n\nexport { write, get, getAll, getByIdForUser, setCoalition, getCoalitionLink, getCoalitionRedirect, deleteDocument, getByInviteId, updateCharter, getPublic, joinPublic };\n\n","import React from 'react'\nimport { getCoalitionLink } from '../coalition/api';\n\nconst CoalitionEntry = ({ coalition }) => {\n  const { name } = coalition.data();\n  return (\n    <div className='coalition-row'>\n      <span>{name}</span>\n      <span><a href={getCoalitionLink(coalition.id)}>Coalition Link</a></span>\n    </div>\n  )\n}\n\nexport default CoalitionEntry","import React, { useEffect, useState } from 'react'\nimport { getPublic } from '../coalition/api';\nimport CoalitionEntry from './CoalitionEntry';\nimport './browse.css';\n\nconst Browse = () => {\n  const [coalitions, setCoalitions] = useState();\n  useEffect(() => {\n    var effect = async () => {\n      const coalitions = await getPublic();\n      setCoalitions(coalitions);\n    }\n    effect();\n  }, [])\n  return (\n    <div>\n      <h1>Browse</h1>\n      <p>\n        Here, you can browse all the public coalitions.\n      </p>\n      <p>\n        Click the Coalition Link to navigate to the selected coalition.\n      </p>\n      {\n        coalitions && coalitions.map((c, i) => <CoalitionEntry key={i} coalition={c} />)\n      }\n    </div>\n  )\n}\n\nexport default Browse","import { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getByAuthIdSub } from './api';\n\nconst UserContext = createContext();\nconst UserContextProvider = ({ children }) => {\n  const auth = getAuth();\n  const [message, setMessage] = useState();\n  const [user, setUser] = useState();\n  const [loggedInUser, setLoggedInUser] = useState();\n  \n  useEffect(() => {\n    if(loggedInUser && loggedInUser.uid)\n\n    return getByAuthIdSub(loggedInUser.uid, (u) => {\n      setUser(u);\n    },error=>{\n      setMessage(error.message);\n    });\n\n  }, [loggedInUser]);\n  onAuthStateChanged(auth, (u) => {\n    if (u) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      //const uid = user.uid;\n      setLoggedInUser(u);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      setLoggedInUser(null);\n    }\n  });\n  if (user === undefined || user === null\n  ) {\n    return <div>loading...</div>\n  }\n  return (\n    <UserContext.Provider value={{user}}>\n      {children}\n      {message && <div>{message}</div>}\n    </UserContext.Provider>\n  )\n}\n\nexport { UserContext };\nexport default UserContextProvider","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { getIsOnlyUser, getUserIsMemberSub } from \"../members/api\";\nimport { getByCoalitionIdSub } from '../rules/api';\nimport { getCurrentUserId } from '../user/api';\nimport { UserContext } from '../user/UserContextProvider';\nimport { getByIdForUser } from './api';\n\nconst CoalitionContext = createContext();\nconst CoalitionContextProvider = ({ children, coalitionId }) => {\n  const userContext = useContext(UserContext);\n  const { user } = userContext;\n  const [openCoalition, setOpenCoalition] = useState();\n  const [isOnlyUser, setIsOnlyUser] = useState();\n  const [rules, setRules] = useState();\n  const [message, setMessage] = useState();\n  const [isCreator, setIsCreatorState] = useState(false);\n  const [isMember, setIsMember] = useState(false);\n  useEffect(() => {\n    return getUserIsMemberSub(user.id, coalitionId, setIsMember)\n  }, [coalitionId, user.id])\n  useEffect(() => {\n    const setFromParams = async () => {\n      try {\n        const coalition = await getByIdForUser(coalitionId);\n        setOpenCoalition(coalition);\n      }\n      catch (e) {\n        setMessage(e.message);\n      }\n    }\n    setFromParams();\n  }, [coalitionId])\n  useEffect(() => {\n    const effect = async () => {\n      const isOnlyUserResult = await getIsOnlyUser(coalitionId);\n      setIsOnlyUser(isOnlyUserResult);\n    }\n    effect();\n  }, [coalitionId]);\n\n  useEffect(() => {\n    if (coalitionId)\n      return getByCoalitionIdSub(coalitionId, rulesResult => setRules(rulesResult));\n  }, [coalitionId])\n  //const isCreator = openCoalition && openCoalition.data().createdBy === await getCurrentUserId();\n  useEffect(() => {\n    const effect = async () => {\n      const isCreator = openCoalition && openCoalition.data().createdBy === await getCurrentUserId();\n\n      setIsCreatorState(isCreator);\n    }\n    effect();\n  }, [openCoalition])\n\n  if (isOnlyUser === undefined\n    || openCoalition === undefined\n    || rules === undefined\n  ) {\n    return <div>loading...</div>\n  }\n  const providerValue = {\n    coalition: openCoalition,\n    isCreator, isOnlyUser, rules, isMember\n  };\n  return (\n    <CoalitionContext.Provider value={providerValue}>\n      {children}\n      {message && <div>{message}</div>}\n    </CoalitionContext.Provider>\n  )\n}\nexport { CoalitionContext };\nexport default CoalitionContextProvider;","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getLink } from './api';\n\nconst InviteLink = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [inviteLink, setInviteLink] = useState(\"http://localhost:3000/\");\n  useEffect(() => {\n    const getInviteLink = async () => {\n      setInviteLink(await getLink(coalition.id));\n    }\n    if (coalition.id)\n      getInviteLink();\n  }, [coalition.id])\n  return (\n    <div>\n      <div>Invite Link:</div>\n      <input type=\"button\" value=\"Copy Invite Link\" onClick={() => { navigator.clipboard.writeText(inviteLink) }}></input>\n      <div>\n        <textarea disabled value={inviteLink} className='inviteLinkBox'></textarea>\n      </div>\n    </div>\n  )\n}\n\nexport default InviteLink\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getUserNameSub, getUserPronouns } from './api';\nimport \"./user.css\";\n\nconst UserName = ({ userId }) => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [name, setName] = useState();\n  const [pronouns, setPronouns] = useState();\n  useEffect(() => {\n    const effect = async () => {\n      if (userId) {\n        const pronounResponse = await getUserPronouns(userId);\n        setPronouns(pronounResponse);\n      }\n    }\n    effect();\n  }, [userId])\n  useEffect(() => {\n    const effect = async () => {\n      if (userId) {\n        return getUserNameSub(userId, coalition.id, user => {\n          setName(user);\n        });\n      }\n    }\n    effect();\n  }, [userId, coalition.id])\n\n  return (\n    <span>\n      <span>{name}</span>\n\n      <span className='member-pronouns'>({pronouns})</span>\n    </span>\n  )\n}\n\nexport default UserName","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport UserName from '../user/UserName';\nimport { getByCoalitionIdSub } from './api';\n\nconst Members = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [members, setMembers] = useState();\n\n  useEffect(() => {\n    return getByCoalitionIdSub(coalition.id, setMembers)\n  }, [coalition.id])\n  return (\n    <div>\n      <div>Member number: {members && members.length}</div>\n      {members && members.map((m, i) => {\n        if (m) {\n          const { memberId } = m.data();\n          return (\n            <div key={i}>\n              <UserName userId={memberId} />\n            </div>);\n        }\n        else return <div key={i}>No info</div>\n      })}\n    </div>\n  )\n}\n\nexport default Members\n","import { getCurrentUserId } from \"../user/api\";\nimport api from \"../_common/api\";\n\nconst { createDoc, getByCoalitionIdSub, deleteDocument } = api(\"messages\");\n\nconst create = async (coalitionId, text) => {\n  const newRule = {\n    coalitionId,\n    text,\n    postedBy: await getCurrentUserId()\n  };\n  await createDoc(newRule);\n}\n\nconst postedByCurrentUser = async (postedBy) => {\n  const userId = await getCurrentUserId();\n  return userId === postedBy;\n}\n\nexport { create, getByCoalitionIdSub, postedByCurrentUser, deleteDocument };\n\n","import React, { useEffect, useState } from 'react';\nimport UserName from '../user/UserName';\nimport { deleteDocument, postedByCurrentUser } from './api';\nimport \"./style.css\";\n\nconst Message = ({ message }) => {\n  const [isPostedByCurrent, setIsPostedByCurrent] = useState(false);\n  const [createdDateString, setCreatedDateString] = useState(false);\n  useEffect(() => {\n    const effect = async () => {\n      if (!message) return;\n      const { postedBy } = message.data();\n      const postedByCurrent = await postedByCurrentUser(postedBy);\n      setIsPostedByCurrent(postedByCurrent);\n    }\n    effect();\n\n  }, [message])\n  useEffect(() => {\n    const { createdDate } = message.data();\n    const dateString = createdDate.toDate().toLocaleDateString();\n    const timeString = createdDate.toDate().toLocaleTimeString();\n    setCreatedDateString(`${dateString} ${timeString}`);\n  }, [message])\n  if (!message) return <div>loading</div>\n  const { text, postedBy } = message.data();\n\n  const onReplyButtonClick = e => {\n\n  }\n  const onDeleteClick = async e => {\n    await deleteDocument(message.id);\n  }\n  return (\n    <div className='message-box'>\n      <div className='user-name'>\n        <span> <UserName userId={postedBy} /></span>\n        <span>\n          {isPostedByCurrent && <input type=\"button\" value=\"X\" className='delete-icon' onClick={onDeleteClick}></input>}\n        </span>\n        <hr />\n      </div>\n      <div className='message-text'>\n        {text}\n      </div>\n      <div className='message-footer'>\n        <span className='message-date'>{createdDateString}</span>\n        <span><input type=\"button\" value=\"reply\" onClick={onReplyButtonClick} className='reply-button'></input></span>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Message","import React, { useState } from 'react'\nimport { create } from './api';\n\nconst NewMessage = ({ coalitionId }) => {\n  const [text, setText] = useState('');\n  const onTextChange = e => {\n    setText(e.target.value);\n  }\n  const onSubmitMessage = async e => {\n    e.preventDefault();\n    await create(coalitionId, text);\n    setText('');\n  }\n  return (\n    <form onSubmit={onSubmitMessage}>\n      <input placeholder='message' onChange={onTextChange} value={text}></input>\n      <input type=\"submit\"></input>\n    </form>\n  )\n}\n\nexport default NewMessage;","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getByCoalitionIdSub } from './api';\nimport Message from './Message';\nimport NewMessage from './NewMessage';\n\n\nconst Messages = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition, isMember } = coalitionContext;\n  const [messages, setMessages] = useState();\n  const [showNewMessage, setShowNewMessage] = useState();\n  useEffect(() => {\n    setShowNewMessage(isMember);\n  }, [isMember])\n  useEffect(() =>\n    getByCoalitionIdSub(coalition.id,\n      coalitionMessages => {\n        const sortedMessages = coalitionMessages.sort((a, b) => b.data().createdDate - a.data().createdDate);\n        setMessages(sortedMessages);\n      }\n    ), [coalition.id]);\n\n  return (\n    <div>\n      {messages && messages.map((m, i) => {\n        return (<Message key={i} message={m} />);\n      })}\n      {showNewMessage && <NewMessage coalitionId={coalition.id} />}\n    </div>\n  )\n}\n\nexport default Messages","import { addDoc, getDocs, onSnapshot, query, where } from \"firebase/firestore\";\nimport api from \"../_common/api\";\n\nconst { getCurrentUser, getCollection, set } = api(\"votes\");\n\nconst submitVote = async (petitionId, selection) => {\n  const existingVote = await getByPetitionIdForUser(petitionId);\n  if (existingVote) {\n    const voteToUpdate = {\n      petitionId,\n      userId: getCurrentUser().uid,\n      selection\n    }\n    set(existingVote.id, voteToUpdate)\n  }\n  else {\n    const newVote = {\n      petitionId,\n      userId: getCurrentUser().uid,\n      selection\n    }\n    await addDoc(getCollection(), newVote);\n  }\n}\n\nconst getByPetitionIdForUser = async (petitionId) => {\n  const q = query(getCollection(), where(\"petitionId\", \"==\", petitionId), where(\"userId\", \"==\", getCurrentUser().uid));\n  const membershipQuerySnapshot = await getDocs(q);\n  return membershipQuerySnapshot.docs[0];\n}\nconst getByPetitionIdForUserSub = (petitionId, callback) => {\n  const q = query(getCollection(), where(\"petitionId\", \"==\", petitionId), where(\"userId\", \"==\", getCurrentUser().uid));\n  const unsub = onSnapshot(q, snap => {\n    callback(snap.docs[0]);\n  })\n  return unsub;\n}\n\nconst getByPetitionId = async (petitionId) => {\n  const q = query(getCollection(), where(\"petitionId\", \"==\", petitionId));\n  const membershipQuerySnapshot = await getDocs(q);\n  return membershipQuerySnapshot.docs;\n}\n\nconst getByPetitionIdSub = async (petitionId, callback) => {\n\n  const q = query(getCollection(), where(\"petitionId\", \"==\", petitionId));\n  return onSnapshot(q, snap => {\n    callback(snap.docs);\n  })\n\n}\n\n\n\nexport { submitVote, getByPetitionId, getByPetitionIdForUser, getByPetitionIdForUserSub,getByPetitionIdSub };\n\n","import { addDoc, getDocs, query, where } from \"firebase/firestore\";\nimport { updateCharter } from '../coalition/api';\nimport { getMemberCount, getMemberCountSub } from \"../members/api\";\nimport { createWithType, getByName, getByNameSub, updateRule } from \"../rules/api\";\nimport { getByPetitionId } from \"../vote/api\";\nimport api from \"../_common/api\";\n\nconst { getCurrentUser, getById, getCollection, set, getByCoalitionIdSub, getByIdSub } = api(\"petitions\");\n\nconst create2 = async (coalitionId, petitionType, data) => {\n  const votesNeeded = await getVotesNeeded(coalitionId);\n  const newPetition = {\n    coalitionId,\n    petitionType,\n    userId: getCurrentUser().uid,\n    votesNeeded,\n    status: \"new\",\n    ...data\n  }\n  await addDoc(getCollection(), newPetition);\n\n}\n\nconst getByCoalitionId = async coalitionId => {\n  const q2 = query(getCollection(), where(\"coalitionId\", \"==\", coalitionId));\n  const membershipQuerySnapshot = await getDocs(q2);\n  return membershipQuerySnapshot.docs;\n}\n\nconst executePetition = async (petitionId) => {\n  const petition = await getById(petitionId);\n  const { petitionType, coalitionId, charterText } = petition.data();\n  if (petitionType === \"1\") {//Update Charter\n    await updateCharter(coalitionId, charterText);\n  }\n  else if (petitionType === \"2\") {//Rule Add\n    const { ruleName, type, value } = petition.data();\n    await createWithType(coalitionId, ruleName, type, value);\n  }\n  else if (petitionType === \"3\") {//Rule Change\n    const { ruleName, value } = petition.data();\n    await updateRule(coalitionId, ruleName, value);\n  }\n  await set(petitionId, { ...petition.data(), status: \"complete\" });\n}\n\nconst updateStatus = async (petitionId, status) => {\n  const petition = await getById(petitionId);\n  await set(petitionId, { ...petition.data(), status });\n}\n\nconst checkVotes = async (petitionId) => {\n  const petition = await getById(petitionId);\n  const votesNeeded = petition.data().votesNeeded;\n  const votes = await getByPetitionId(petitionId);\n  const yesVotes = votes.filter(v => v.data().selection === \"yes\")\n  if (yesVotes.length >= votesNeeded) {\n    await executePetition(petitionId);\n  }\n}\n\nconst processPetition = async (petitionId) => {\n  const petition = await getById(petitionId);\n  const { status, coalitionId } = petition.data();\n  var changedStatus = status;\n  //new=>passed=>ready=>complete\n  if (status === \"new\") {\n    changedStatus = await assessPetitionVotes(coalitionId, petitionId);\n  }\n  if (changedStatus === \"passed\" || status === \"passed\") {\n    changedStatus = await checkReady(petitionId);\n  }\n  if (changedStatus === \"ready\" || status === \"ready\") {\n    await completePetition(petitionId);\n    //get to \"complete\"\n  }\n}\n\nconst assessPetitionVotes = async (coalitionId, petitionId) => {\n  //get to \"passed\"\n  const votes = await getByPetitionId(petitionId);\n  const yesVotes = votes.filter(v => v.data().selection === \"yes\")\n  var votesNeeded = await getVotesNeeded(coalitionId);\n  if (votesNeeded > 0 && yesVotes.length >= votesNeeded) {\n    await updateStatus(petitionId, \"passed\");\n    return \"passed\";\n  }\n  return \"new\";\n}\n\nconst getVotesNeeded = async (coalitionId) => {\n  const memberCount = await getMemberCount(coalitionId);\n  const votesNeededRule = await getByName(coalitionId, \"votesNeeded\");\n  if (votesNeededRule) {\n    const { value } = votesNeededRule.data();\n    return value\n  }\n  else {\n    return memberCount;\n  }\n}\n\nconst getVotesNeededSub = async (coalitionId, callback) => {\n  const unsub2 = getMemberCountSub(coalitionId, (memberCount) => {\n    const unsub = getByNameSub(coalitionId, \"votesNeeded\", async votesNeededRule => {\n      if (votesNeededRule) {\n        const { value } = votesNeededRule.data();\n        callback(value);\n      }\n      else {\n        callback(memberCount);\n      }\n    }, err => {\n      callback(memberCount);\n    }\n\n    );\n    return unsub;\n  });\n  return unsub2;\n}\n\nconst checkReady = async (petitionId) => {\n  //check rules, completion date, etc\n  await updateStatus(petitionId, \"ready\");\n  return \"ready\";\n}\n\nconst completePetition = async (petitionId) => {\n  const petition = await getById(petitionId);\n  const { petitionType, coalitionId, charterText } = petition.data();\n  if (petitionType === \"1\") {//Update Charter\n    await updateCharter(coalitionId, charterText);\n  }\n  else if (petitionType === \"2\") {//Rule Add\n    const { ruleName, type, value } = petition.data();\n    await createWithType(coalitionId, ruleName, type, value);\n  }\n  else if (petitionType === \"3\") {//Rule Change\n    const { ruleName, value } = petition.data();\n    await updateRule(coalitionId, ruleName, value);\n  }\n  await updateStatus(petitionId, \"complete\");\n  return \"complete\";\n}\n\n\nconst getOutcome = async (petitionId) => {\n  const petition = await getById(petitionId);\n  const votesNeeded = petition.data().votesNeeded;\n  const votes = await getByPetitionId(petitionId);\n  const yesVotes = votes.filter(v => v.data().selection === \"yes\").length;\n  const noVotes = votes.filter(v => v.data().selection === \"no\").length;\n\n  return { votesNeeded, yesVotes, noVotes }\n\n}\n\nconst updatePetition = async (petitionId) => {\n  const petition = getById(petitionId);\n  await set(petitionId, { ...petition });\n}\n\nexport { getByCoalitionId, checkVotes, create2, updatePetition, getOutcome, getByCoalitionIdSub, getByIdSub, processPetition, getVotesNeeded, getVotesNeededSub };\n\n","import React from 'react';\n\nconst RuleTypeDropdown = ({ onTypeChange }) => {\n  return (\n    <select onChange={onTypeChange}>\n      <option>text</option>\n      <option>boolean</option>\n      <option>number</option>\n    </select>\n  )\n}\n\nexport default RuleTypeDropdown","import React, { useState } from 'react';\nimport RuleTypeDropdown from '../rules/RuleTypeDropdown';\n\nconst PetitionField = ({ field, updateFormValue, fieldType = \"text\" }) => {\n  const [booleanValue, setBooleanValue] = useState(false);\n  const onTypeChange = e => {\n    updateFormValue({ type: e.target.value });\n  }\n  const onInputChange = e => {\n    updateForm(e.target.name, e.target.value);\n  }\n  const onInputChangeBool = e => {\n    var newValue = !booleanValue;\n    setBooleanValue(newValue);\n    updateForm(e.target.name,newValue);\n  }\n  const updateForm = (name, value) => {\n    const newJsonValue = `{\"${name}\": \"${value}\"}`\n    const json = JSON.parse(newJsonValue);\n    updateFormValue(json);\n  }\n  if (field.value === \"type\") {\n    return (<div>\n      <RuleTypeDropdown onTypeChange={onTypeChange} />\n    </div>)\n  }\n  if (fieldType === \"boolean\" && field.value === \"value\")\n    return (\n      <div>\n        <input type=\"checkbox\" onChange={onInputChangeBool} name={field.value} placeholder={field.text}></input>\n      </div>\n    )\n  if (fieldType === \"number\" && field.value === \"value\")\n    return (\n      <div>\n        <input type=\"number\" onChange={onInputChange} name={field.value} placeholder={field.text}></input>\n      </div>\n    )\n  return (\n    <div>\n      <input onChange={onInputChange} name={field.value} placeholder={field.text}></input>\n    </div>\n  )\n}\n\nexport default PetitionField\n","const petitionTypes = [\n  { value: 0, text: \"Text Petition\", fields: [{ value: \"title\", text: \"Title\" }, { value: \"body\", text: \"Body\" }] },\n  { value: 1, text: \"Update Charter\", fields: [{ value: \"charterText\", text: \"Charter Text\" }] },\n  { value: 2, text: \"Rule Add\", fields: [{ value: \"ruleName\", text: \"Rule Name\" }, { value: \"type\", text: \"Rule Type\" }, { value: \"value\", text: \"Rule Value\" }] },\n  { value: 3, text: \"Rule Change\", fields: [{ value: \"ruleName\", text: \"Rule Name\" }, { value: \"value\", text: \"Rule Value\" }] },\n]\nexport default petitionTypes;","import React, { useEffect, useState } from 'react';\nimport PetitionField from './PetitionField';\nimport petitionTypes from './petitionTypes';\n\nconst NewPetitionForm = ({ petitionType, setPetitionDataParent }) => {\n  const [selectedPetitionType, setSelectedPetitionType] = useState();\n  const [formValue, setFormValue] = useState();\n  const [fieldType, setFieldType] = useState();\n\n  useEffect(() => {\n    const result = petitionTypes.filter(t => t.value === parseInt(petitionType))\n    if (result.length === 1) {\n      setSelectedPetitionType(result[0]);\n    }\n  }, [petitionType])\n  const updateFormValue = (newFieldValue) => {\n    var newValue = { ...formValue, ...newFieldValue };\n    if (petitionType === \"2\") {\n      if (!newValue.type) {\n        //allow newvalue to overwrite\n        newValue = { type: \"text\", ...newValue };\n      }\n    }\n    setFormValue(newValue);\n    setFieldType(newValue.type);\n    setPetitionDataParent(newValue);\n  }\n  if (!selectedPetitionType) return <div></div>;\n  return (\n    <div>\n      {selectedPetitionType.fields && selectedPetitionType.fields.map((f, i) =>\n        <PetitionField key={i} field={f} updateFormValue={updateFormValue} fieldType={fieldType} />\n      )}\n    </div>\n  )\n}\n\nexport default NewPetitionForm\n","import React, { useContext, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { create2 } from './api';\nimport NewPetitionForm from './NewPetitionForm';\nimport petitionTypes from './petitionTypes';\n\nconst NewPetition = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [message, setMessage] = useState(\"\");\n  const [petitionType, setPetitionType] = useState(\"0\");\n  const [petitionData, setPetitionData] = useState();\n\n  const onPetitionSubmit = async e => {\n    e.preventDefault();\n    await create2(coalition.id, petitionType, petitionData);\n    setMessage(\"Created Successfully\");\n  }\n  const onPetitionTypeChange = e => {\n    const newPetitionType = e.target.value;\n    setPetitionType(newPetitionType);\n  }\n  const setPetitionDataParent = (data) => {\n    setPetitionData(data);\n  }\n  return (\n    <form onSubmit={onPetitionSubmit}>\n      <select onChange={onPetitionTypeChange}>\n        {petitionTypes.map((t, i) => <option key={i} value={t.value}>{t.text}</option>)}\n      </select>\n      <NewPetitionForm petitionType={petitionType} setPetitionDataParent={setPetitionDataParent} />\n      <div><input type=\"submit\" value=\"submit petition\"></input></div>\n      <div>{message}</div>\n    </form>\n  )\n}\n\nexport default NewPetition\n","import React, { useEffect, useState } from 'react';\nimport { processPetition } from '../petition/api';\nimport { getByPetitionIdForUserSub, submitVote } from './api';\nimport \"./vote.css\";\n\nconst Vote = ({ petitionId }) => {\n  const [selectedVote, setSelectedVote] = useState();\n  useEffect(() => {\n    getByPetitionIdForUserSub(petitionId, v => {\n      if (v) {\n        const { selection } = v.data();\n        setSelectedVote(selection);\n      }\n    })\n  }, [petitionId])\n\n  const onVoteYes = async e => {\n    e.preventDefault();\n    await submitVote(petitionId, \"yes\");\n    await processPetition(petitionId);\n  }\n  const onVoteNo = async e => {\n    e.preventDefault();\n    await submitVote(petitionId, \"no\");\n    await processPetition(petitionId);\n  }\n  return (\n    <div className='vote-box'>\n      <input type=\"button\" value=\"yes\" onClick={onVoteYes} disabled={selectedVote === \"yes\"}></input>\n      <input type=\"button\" value=\"no\" onClick={onVoteNo} disabled={selectedVote === \"no\"}></input>\n    </div>\n  )\n}\n\nexport default Vote\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getByPetitionIdSub } from '../vote/api';\nimport { getVotesNeededSub } from './api';\n\nconst Status = ({ petitionId }) => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [votes, setVotes] = useState();\n  const [votesNeeded, setVotesNeeded] = useState();\n\n  useEffect(() => {\n    return getByPetitionIdSub(petitionId, v => {\n      setVotes(v);\n    });\n  }, [petitionId])\n  useEffect(() => {\n    return getVotesNeededSub(coalition.id, votesNeeded => {\n      setVotesNeeded(votesNeeded)\n    })\n  }, [coalition.id])\n  const yesVotes = votes && votes.filter(v => v.data().selection === \"yes\").length;\n  const noVotes = votes && votes.filter(v => v.data().selection === \"no\").length;\n  return (\n    <div>\n      {<div className='status-panel'>\n        <span>Yes: {yesVotes}</span>\n        <span>No: {noVotes}</span>\n        <span>Need: {votesNeeded}</span>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default Status","import React, { useEffect, useState } from 'react';\nimport Vote from '../vote/Vote';\nimport { processPetition } from './api';\nimport petitionTypes from './petitionTypes';\nimport Status from './Status';\n\nconst Petition = ({ petition, showVote }) => {\n  const [selectedPetitionType, setSelectedPetitionType] = useState();\n\n  useEffect(() => {\n    const result = petitionTypes.filter(t => t.value === parseInt(petition.data().petitionType))\n    if (result.length === 1) {\n      setSelectedPetitionType(result[0]);\n    }\n  }, [petition])\n  const data = petition.data();\n  const onProcessClick = async e => {\n    e.preventDefault();\n    await processPetition(petition.id);\n  }\n  return (<div className='petition-block'>\n    Status: {data.status}\n    {(<div>\n      {selectedPetitionType && selectedPetitionType.fields.map((f, i) => {\n        const dataValue = data[f.value];\n        return (<div key={i}>{f.text}: {dataValue}</div>)\n      })}\n    </div>)}\n    {showVote && <Vote petitionId={petition.id} ></Vote>}\n    <Status petitionId={petition.id} />\n    <input type=\"button\" value=\"process\" onClick={onProcessClick} />\n  </div>)\n\n}\n\nexport default Petition\n","import React from 'react';\nimport Petition from './Petition';\n\nconst PetitionList = ({ petitions, showVote }) => {\n  return (\n    <div>\n      {petitions && (petitions.map((petition, i) => <Petition key={i} petition={petition} showVote={showVote} />))}\n    </div>\n  )\n}\n\nexport default PetitionList\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getByCoalitionIdSub } from './api';\nimport './petition.css';\nimport PetitionList from './PetitionList';\n\nconst Petitions = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [petitions, setPetitions] = useState()\n  useEffect(() => {\n    return getByCoalitionIdSub(coalition.id, p => {\n      setPetitions(p);\n    });\n  }, [coalition.id])\n  const openPetitions = () => {\n    return petitions.filter(p => p.data().status === \"new\");\n  }\n  const passedPetitions = () => {\n    return petitions.filter(p => p.data().status === \"passed\");\n  }\n\n  const completedPetitions = () => {\n    return petitions.filter(p => p.data().status === \"complete\");\n  }\n\n  if (!petitions) return <div></div>;\n  const readyPetitions = petitions.filter(p => p.data().status === \"ready\");\n  return (\n    <div>\n      {openPetitions() && (openPetitions().length > 0) && <h2>Open Petitions</h2>}\n      {<PetitionList petitions={openPetitions()} showVote={true} />}\n      {passedPetitions() && (passedPetitions().length > 0) && <h2>Passed Petitions</h2>}\n      {<PetitionList petitions={passedPetitions()} showVote={false} />}\n      {readyPetitions && (readyPetitions.length > 0) && <h2>Ready Petitions</h2>}\n      {<PetitionList petitions={readyPetitions} showVote={false} />}\n      {completedPetitions() && (completedPetitions().length > 0) && <h2>Completed Petitions</h2>}\n      {<PetitionList petitions={completedPetitions()} showVote={false} />}\n    </div>\n  )\n}\n\nexport default Petitions","\nimport api from \"../_common/api\";\n\nconst { createDoc, getByCoalitionIdSub, deleteDocument } = api(\"roles\");\nconst create = async (coalitionId, name, memberId) => {\n  const newDoc = {\n    coalitionId,\n    name,\n    memberId\n  }\n  await createDoc(newDoc)\n}\nexport { getByCoalitionIdSub, create, deleteDocument };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getIdNamePairSub } from './api';\n\nconst MemberDropdown = ({ onSelect }) => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [members, setMembers] = useState();\n  useEffect(() => {\n    return getIdNamePairSub(coalition.id, setMembers)\n  }, [coalition.id])\n  const onMemberChange = e => {\n    onSelect(e.target.value);\n  }\n  return (\n    <select onChange={onMemberChange}>\n      <option value=\"\" >(none)</option>\n      {members && members.map((m, i) => {\n        const { displayName, memberId } = m;\n        return (<option key={i} value={memberId}>{displayName}</option>)\n      })}\n    </select>\n  )\n}\n\nexport default MemberDropdown","import React, { useContext, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport MemberDropdown from '../members/MemberDropdown';\nimport { create } from './api';\n\nconst NewRoleRow = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [name, setName] = useState();\n  const [memberId, setMemberId] = useState();\n\n  const onNameChange = e => {\n    setName(e.target.value);\n  }\n  const onClickAdd = async e => {\n    e.preventDefault();\n    await create(coalition.id, name, memberId || null);\n  }\n  const onMemberSelect = id => {\n    setMemberId(id);\n  }\n  return (\n    <tr>\n      <td>\n        <input placeholder='name' onChange={onNameChange}></input>\n      </td>\n      <td>\n        <MemberDropdown onSelect={onMemberSelect} />\n      </td>\n      <td>\n        <input type=\"button\" placeholder='member' value=\"Add\" onClick={onClickAdd}></input>\n      </td>\n    </tr>\n  )\n}\n\nexport default NewRoleRow","import React from 'react';\nimport UserName from '../user/UserName';\nimport { deleteDocument } from './api';\n\nconst Role = ({ role }) => {\n  const { name, memberId } = role.data();\n  const onClickDelete = async e => {\n    e.preventDefault();\n    await deleteDocument(role.id);\n  }\n  return (\n    <tr>\n      <td>{name}</td>\n      {memberId && <td><UserName userId={memberId} /></td>}\n      {!memberId && <td>{<i>(empty)</i>}</td>}\n      <input type=\"button\" value=\"delete\" onClick={onClickDelete}></input>\n    </tr>\n  )\n}\n\nexport default Role","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getByCoalitionIdSub } from './api';\nimport NewRoleRow from './NewRoleRow';\nimport Role from './Role';\n\nconst Roles = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { isOnlyUser, coalition } = coalitionContext;\n  const [roles, setRoles] = useState();\n  useEffect(() => {\n    return getByCoalitionIdSub(coalition.id, setRoles);\n  }, [coalition.id])\n\n  return (\n    <div>\n      <table>\n        <thead><tr>\n          <th>name</th>\n          <th>member</th>\n        </tr></thead>\n        <tbody>\n          {roles && roles.map((r, i) => <Role role={r} key={i} />)}\n          {isOnlyUser && <NewRoleRow />}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Roles","import React, { useState } from 'react';\nimport { createWithType } from './api';\n\nconst NewRule = ({ coalitionId }) => {\n  const [ruleName, setRuleName] = useState();\n  const [ruleValue, setRuleValue] = useState();\n  const [message, setMessage] = useState();\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n    await createWithType(coalitionId, ruleName, \"text\", ruleValue);\n    setMessage(\"complete\");\n  }\n  const nameChange = e => {\n    setRuleName(e.target.value);\n  }\n  const valueChange = e => {\n    setRuleValue(e.target.value);\n  }\n  return <div>\n    <form onSubmit={onFormSubmit}>\n      New Rule\n      <hr />\n      <input placeholder='Rule Name' onChange={nameChange}></input>\n      <input placeholder='Rule Value' onChange={valueChange}></input>\n      <input type=\"submit\" />\n      {message}\n    </form>\n\n  </div>;\n};\n\nexport default NewRule;\n","import React, { useContext, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { createWithType } from './api';\nimport RuleTypeDropdown from './RuleTypeDropdown';\n\nconst NewRuleRow = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [name, setName] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [type, setType] = useState(\"text\");\n\n  const onRuleAddClick = async e => {\n    e.preventDefault();\n    await createWithType(coalition.id, name, type, value);\n    setName(\"\");\n    setValue(\"\");\n    setType(\"text\");\n  }\n  const onNameChange = e => {\n    setName(e.target.value);\n  }\n  const onValueChange = e => {\n    setValue(e.target.value);\n  }\n  const onValueChangeBoolean = e => {\n    setValue(!value);\n  }\n  const onValueChangeNumber = e => {\n    const targetValue = parseInt(e.target.value);\n    setValue(targetValue);\n  }\n  const onTypeChange = e => {\n    const newType = e.target.value;\n    switch (newType) {\n      case \"boolean\":\n        setValue(false);\n        break;\n      case \"text\":\n        setValue(\"\");\n        break;\n      case \"number\":\n        setValue(0);\n        break;\n      default:\n        break;\n    }\n    setType(e.target.value);\n  }\n  return (<tr className='new-rule-row'>\n    <td><input placeholder='name' onChange={onNameChange} value={name}></input></td>\n    <td>\n      <RuleTypeDropdown onTypeChange={onTypeChange} />\n    </td>\n    <td>\n      {type === \"text\" && <input placeholder='value' onChange={onValueChange}></input>}\n      {type === \"boolean\" && <input type=\"checkbox\" onChange={onValueChangeBoolean}></input>}\n      {type === \"number\" && <input type=\"number\" placeholder='value' onChange={onValueChangeNumber}></input>}\n    </td>\n\n    <td className='new-rule-add'><input type=\"submit\" onClick={onRuleAddClick} value=\"Add\"></input></td>\n  </tr>);\n};\n\nexport default NewRuleRow;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { updateRule } from './api';\n\nconst RuleEditCell = ({ r }) => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const { value, name } = r.data();\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [cellValue, setCellValue] = useState(value);\n  const [displayValue, setDisplayValue] = useState('');\n  useEffect(() => {\n    if (value === false) {\n      setDisplayValue(\"false\");\n    }\n    else if (value === true) {\n\n      setDisplayValue(\"true\");\n    }\n    else {\n      setDisplayValue(value);\n    }\n  }, [value])\n\n  const onCellClick = e => {\n    setIsInEditMode(true);\n  }\n  const onCellValueChange = e => {\n    setCellValue(e.target.value);\n  }\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    if (cellValue === \"false\") {\n      await updateRule(coalition.id, name, false);\n    }\n    else if (cellValue === \"true\") {\n      await updateRule(coalition.id, name, true);\n    }\n    else {\n      await updateRule(coalition.id, name, cellValue);\n    }\n    setMessage(\"Save Successful\");\n    setIsInEditMode(false);\n  }\n  const cancelEdit = e => {\n    setCellValue(value);\n    setIsInEditMode(false);\n  }\n  const onCellBlur = e => {\n    if (value === cellValue) {\n      setIsInEditMode(false);\n    }\n  }\n  return (\n    <td className='rule-value-col' onClick={onCellClick} onBlur={onCellBlur} >\n      {!isInEditMode && (displayValue)}\n      {isInEditMode &&\n        <form onSubmit={onFormSubmit}>\n          <input value={cellValue} onChange={onCellValueChange}></input>\n          <input type=\"submit\" value=\"update\"></input>\n          <input type=\"button\" onClick={cancelEdit} value=\"cancel\" ></input>\n        </form>\n      }\n      <span className='rule-edit-message'>{message}</span>\n    </td>\n  )\n}\n\nexport default RuleEditCell","import React, { useContext, useEffect, useState } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { deleteDocument, getByCoalitionIdSub } from './api';\nimport NewRule from './NewRule';\nimport NewRuleRow from './NewRuleRow';\nimport RuleEditCell from './RuleEditCell';\nimport './rules.css';\n\nconst Rules = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { isOnlyUser, coalition } = coalitionContext;\n\n  const [rules, setRules] = useState();\n  useEffect(() => {\n    return getByCoalitionIdSub(coalition.id, docs => setRules(docs));\n  }, [coalition.id]);\n  if (!rules || rules.length === 0) {\n    return (\n      <div>\n        <div>No rules yet...</div>\n        <div>   {isOnlyUser && <NewRule coalitionId={coalition.id} />}</div>\n      </div>);\n  }\n  const onDeleteClick = async ruleId => {\n    await deleteDocument(ruleId)\n  }\n  return (\n    <div>\n      <table className='rule-table'>\n        <thead>\n          <tr>\n            <th>name</th>\n            <th>type</th>\n            <th>value</th>\n          </tr></thead>\n        <tbody>\n          {rules && rules.map((r, i) =>\n            <tr key={i}>\n              <td className='rule-name-col'> {r.data().name}</td>\n              <td className='rule-name-col'> {r.data().type}</td>\n              <RuleEditCell r={r} />\n              {isOnlyUser && \n              <td><input type=\"button\" value=\"delete\" onClick={() => onDeleteClick(r.id)}></input></td>\n              }\n            </tr>)}\n          {isOnlyUser && <NewRuleRow />}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Rules\n","import React, { useContext } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\n\nconst UserMode = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { isOnlyUser } = coalitionContext;\n  return (\n    <div>\n      {isOnlyUser && <div>Only User Mode</div>}\n    </div>\n  )\n}\n\nexport default UserMode","\nimport React, { useContext, useState } from 'react';\nimport { updateCharter } from './api';\nimport { CoalitionContext } from './CoalitionContextProvider';\n\nconst Charter = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  //const [text, setText] = useState();\n  const { isOnlyUser, coalition } = coalitionContext;\n  const [charterText, setCharterText] = useState(coalition.data().charter);\n  const [message, setMessage] = useState(\"\");\n  // const charterText = coalition.data().charter;\n  const onCharterSubmit = async e => {\n    e.preventDefault();\n\n    await updateCharter(coalition.id, charterText);\n    setMessage(\"Updated\");\n  }\n  const onTextChange = e => {\n    setCharterText(e.target.value);\n    setMessage(\"\");\n  }\n  return (\n    <div>\n      <div>Charter:</div>\n      {!isOnlyUser &&\n        <textarea disabled={!isOnlyUser} value={charterText}></textarea>\n      }\n      {\n        isOnlyUser &&\n        <form onSubmit={onCharterSubmit}>\n          <textarea onChange={onTextChange} value={charterText}></textarea>\n          <br></br>\n          <input type=\"submit\"></input>\n          {message}\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default Charter\n","import React, { useContext } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getCoalitionLink } from './api';\n\nconst CoalitionLink = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  return (\n    <a href={getCoalitionLink(coalition.id)}>Coalition Link</a>\n  )\n}\n\nexport default CoalitionLink","import React, { useContext } from 'react';\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\n\nconst CoalitionName = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  return (\n    <h2> {coalition.data().name}</h2>\n  )\n}\n\nexport default CoalitionName","import React, { useContext, useState } from 'react';\nimport { deleteDocument } from './api';\nimport { CoalitionContext } from './CoalitionContextProvider';\n\nconst Delete = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition, isCreator } = coalitionContext;\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n\n  const onDeleteClick = e => {\n    e.preventDefault();\n    if (deleteConfirm) {\n      deleteDocument(coalition.id)\n      setDeleteConfirm(false);\n    }\n    else setDeleteConfirm(true);\n  }\n  if (!isCreator) return <div></div>;\n  return (\n    <div>Creator things\n      <div>\n        <input type=\"button\" value=\"Delete Coalition\" onClick={onDeleteClick}></input>\n      </div>\n      <div>{deleteConfirm && <div>Delete?</div>}</div>\n    </div>\n  )\n}\n\nexport default Delete\n","import React, { useContext } from 'react';\nimport { joinPublic } from './api';\nimport { CoalitionContext } from './CoalitionContextProvider';\n\nconst Join = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const onClickJoin = async (e) => {\n    e.preventDefault();\n    await joinPublic(coalition);\n  }\n  return (\n    <div>\n      <input type=\"button\" value={\"Join \" + coalition.data().name} onClick={onClickJoin} />\n    </div>\n  )\n}\n\nexport default Join","import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { CoalitionContext } from '../coalition/CoalitionContextProvider';\nimport { getUserIsMember, remove } from \"../members/api\";\nimport Join from './Join';\n\n\nconst Leave = () => {\n  const coalitionContext = useContext(CoalitionContext);\n  const { coalition } = coalitionContext;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [isMember, setIsMember] = useState(false);\n  useEffect(() => {\n    const effect = async () => {\n      const isMember = await getUserIsMember(coalition.id);\n      setIsMember(isMember);\n    }\n    effect();\n  }, [coalition.id])\n  const navigate = useNavigate();\n  const onClickLeave = async e => {\n    e.preventDefault();\n    if (!showConfirm) { setShowConfirm(true); }\n    else {\n      try {\n        await remove(coalition.id);\n        navigate(\"/\");\n      }\n      catch (e) {\n        setErrorMessage(e.message);\n      }\n    }\n  }\n  if (!isMember) return <Join />;\n  return (\n    <div>\n      <input type=\"button\" onClick={onClickLeave} value={\"Leave \" + coalition.data().name}></input>\n      {showConfirm && <div>click again to confirm</div>}\n      <div>\n        {errorMessage}\n      </div>\n    </div>\n  )\n}\n\nexport default Leave\n","import React from 'react';\nimport InviteLink from '../invite/InviteLink';\nimport Members from '../members/Members';\nimport Messages from '../message/Messages';\nimport NewPetition from '../petition/NewPetition';\nimport Petitions from '../petition/Petitions';\nimport Roles from '../roles/Roles';\nimport Rules from '../rules/Rules';\nimport UserMode from '../user/UserMode';\nimport ExpandBox from '../_common/ExpandBox';\nimport Charter from './Charter';\nimport CoalitionContextProvider from './CoalitionContextProvider';\nimport CoalitionLink from './CoalitionLink';\nimport CoalitionName from './CoalitionName';\nimport Delete from './Delete';\nimport Leave from './Leave';\n\nconst CoalitionWithContext = ({ coalitionId }) => {\n  if (!coalitionId) return (<div></div>);\n  return (\n    <CoalitionContextProvider coalitionId={coalitionId}>\n      <div>\n        <CoalitionName />\n        <UserMode />\n        <CoalitionLink />\n        <ExpandBox headerText=\"Members\"><Members /></ExpandBox>\n        <ExpandBox headerText=\"Charter\"><Charter /></ExpandBox>\n        <ExpandBox headerText=\"Messages\"><Messages /></ExpandBox>\n        <ExpandBox headerText=\"Roles\"><Roles /></ExpandBox>\n        <ExpandBox headerText=\"Rules\"><Rules /></ExpandBox>\n        <ExpandBox headerText=\"Invite\"><InviteLink /></ExpandBox>\n        <ExpandBox headerText=\"New Petition\"><NewPetition /></ExpandBox>\n        <ExpandBox headerText=\"Petitions\"><Petitions /></ExpandBox>\n        <Leave />\n        <Delete />\n      </div>\n    </CoalitionContextProvider>\n  )\n}\n\nexport default CoalitionWithContext;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getByIdForUser } from './api';\nimport CoalitionWithContext from './CoalitionWithContext';\n\nconst CoalitionPage = () => {\n  let params = useParams();\n  const [selectedCoalition, setSelectedCoalition] = useState();\n  const [coalitionId, setCoalitionId] = useState();\n\n  const [message, setMessage] = useState()\n  useEffect(() => {\n    const setFromParams = async () => {\n      try {\n        const coalition = await getByIdForUser(params.coalitionId);\n        setSelectedCoalition(coalition);\n        //validate coalitionId\n        setCoalitionId(params.coalitionId);\n      }\n      catch (e) {\n        setMessage(e.message);\n      }\n    }\n    setFromParams();\n  }, [params.coalitionId])\n  if (message) return <div>{message}</div>;\n  if (!selectedCoalition) return <div>Loading...</div>;\n  return (\n    <CoalitionWithContext selectedCoalition={selectedCoalition} coalitionId={coalitionId} />\n  )\n}\n\nexport default CoalitionPage\n","import React, { useEffect, useState } from 'react';\nimport { get } from './api';\n\nconst MyCoalitions = ({ isDirty, setIsDirty, setSelectedCoalition, setCoalitionId }) => {\n  const [coalitions, setCoalitions] = useState();\n  const getCoalitionData = async () => {\n    const coalitions = await get();\n    setCoalitions(coalitions);\n  }\n  // Merge of componentDidMount and componentDidUpdate\n  useEffect(() => {\n    isDirty && getCoalitionData();\n    isDirty && setIsDirty(false);\n    console.log(\"This is mounted or updated.\");\n  }, [isDirty, setIsDirty]);\n\n  return (\n    <div>\n      <h2>My coalitions</h2>      \n      {coalitions && coalitions.map((coalition, i) => {\n        const onSelectCoalition = (e) => {\n          setSelectedCoalition(coalition);\n          setCoalitionId(coalition.id);\n        }\n        return (\n          <div key={i}>\n            {coalition.data().name}\n            <input type=\"button\" value=\"open\" onClick={onSelectCoalition}></input>\n          </div>)\n      })}\n    </div>\n  )\n}\n\nexport default MyCoalitions\n","import React, { useState } from 'react';\nimport { write } from './api';\n\nconst NewCoalition = ({ setIsDirty }) => {\n  const [newCoalitionName, setNewCoalitionName] = useState();\n  const [isPublic, setIsPublic] = useState(false);\n  const [showUserNames, setShowUserNames] = useState(false);\n  const addCoalition = async (e) => {\n    e.preventDefault();\n    await write(newCoalitionName, isPublic, showUserNames);\n    setIsDirty(true);\n  }\n  const newCoalitionNameChange = (e) => {\n    setNewCoalitionName(e.target.value);\n  }\n  const onPublicChange = e=>{\n    setIsPublic(!isPublic);\n  }\n  const onShowUsernameChange = e=>{\n    setShowUserNames(!showUserNames);\n  }\n  return (\n    <div>\n      Add New Coalition\n      <form onSubmit={addCoalition}>\n        <div>\n          <label>name</label> <input onChange={newCoalitionNameChange} value={newCoalitionName}></input>\n        </div>\n        <div>\n          <label>public?</label> <input type=\"checkbox\" value={isPublic} onChange={onPublicChange}></input>\n        </div>\n        <div>\n          <label>show usernames?</label> <input type=\"checkbox\"  onChange={onShowUsernameChange} checked={showUserNames}></input>\n        </div>\n        <div>\n          <input type=\"submit\" />\n          </div>\n      </form>\n    </div>\n  )\n}\n\nexport default NewCoalition\n","import React, { useState } from 'react';\nimport CoalitionWithContext from './CoalitionWithContext';\nimport MyCoalitions from './MyCoalitions';\nimport NewCoalition from './NewCoalition';\n\nconst CoalitionPanel = () => {\n  const [isDirty, setIsDirty] = useState(true);\n  const [selectedCoalition, setSelectedCoalition] = useState();\n  const [coalitionId, setCoalitionId] = useState();\n\n  return (\n    <div className='widget-panel'>\n      <MyCoalitions isDirty={isDirty} setIsDirty={setIsDirty} setSelectedCoalition={setSelectedCoalition} setCoalitionId={setCoalitionId} />\n      <NewCoalition setIsDirty={setIsDirty} />\n      {selectedCoalition && <CoalitionWithContext selectedCoalition={selectedCoalition} coalitionId={coalitionId} />}\n    </div>\n  )\n}\n\nexport default CoalitionPanel\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { getByInviteId, getCoalitionRedirect } from '../coalition/api';\nimport { getCoalitionIdsForCurrentUser } from \"../members/api\";\nimport { accept } from './api';\n\nconst Invite = () => {\n  let [searchParams] = useSearchParams();\n  let navigate = useNavigate();\n  const [coalition, setCoalition] = useState();\n  const [coalitionData, setCoalitionData] = useState();\n  const [inviteId, setInviteId] = useState();\n  const [userIsMember, setUserIsMember] = useState(false);\n  console.log(searchParams);\n\n  useEffect(() => {\n    const getData = async () => {\n      let inviteId = searchParams.get(\"id\");\n      setInviteId(inviteId);\n      var inviteCoalition = await getByInviteId(inviteId);\n      //check membership\n      var userCoalitionIds = await getCoalitionIdsForCurrentUser();\n      if (userCoalitionIds.indexOf(inviteCoalition.id) > -1) {\n        setUserIsMember(true)\n      }\n      setCoalition(inviteCoalition);\n      setCoalitionData(inviteCoalition.data());\n    }\n    getData();\n  }, [searchParams])\n  const onAcceptClick = async e => {\n    e.preventDefault();\n    await accept(inviteId);\n    navigate(getCoalitionRedirect(coalition.id));\n  }\n\n  if (!coalitionData) return <div>Loading...</div>\n  if (userIsMember) return <div>You are a member of {coalitionData.name} </div>\n  return (\n    <div>\n      <div>\n        You've been invited to join {coalitionData.name}\n      </div>\n      <div>\n        <h2>Charter:</h2>\n        <p>{coalitionData.charter}</p>\n\n      </div>\n      <input type=\"button\" onClick={onAcceptClick} value=\"Accept\"></input>\n    </div>\n  )\n}\n\nexport default Invite\n","import React from 'react';\nimport RulesAdmin from '../admin/rules/RulesAdmin';\nimport './rules.css';\n\nconst RulesPage = () => {\n  return (\n    <div className='rules-page'>\n      <h3>System Rules Help</h3>\n      <p>The below rules can be used to achieve the specified function in a coalition.</p>\n      <RulesAdmin />\n    </div>\n  )\n}\n\nexport default RulesPage","import React, { useEffect, useState } from 'react';\nimport { get, set, updateUserEmail } from './api';\n\n\nconst Account = () => {\n  const [selectedAccount, setSelectedAccount] = useState();\n  const [updatedDisplayName, setDisplayName] = useState('');\n  const [message, setMessage] = useState('');\n  const [pronouns, setPronouns] = useState('');\n  const [showUpdateEmail, setShowUpdateEmail] = useState(false);\n  const [newEmail, setNewEmail] = useState('');\n  const [showCredentialReq, setShowCredentialReq] = useState(false);\n  const [pw, setpw] = useState('');\n  // const newEmailRef = useRef();\n  // const pwRef = useRef();\n  useEffect(() => {\n    const effectFunc = async () => {\n      const account = await get();\n      setSelectedAccount(account);\n\n      const { displayName, pronouns } = account.data();\n      setDisplayName(displayName);\n      setPronouns(pronouns);\n    }\n    effectFunc();\n  }, [])\n\n  //TODO: shift to data array storage of fields and genericize value changing function\n  //TODO: create token system for pending change to loggedInUser.email\n  const onChageDisplayName = e => {\n    setDisplayName(e.target.value);\n    setMessage(\"\");\n  }\n  const onChagePronouns = e => {\n    e.preventDefault();\n    setPronouns(e.target.value);\n    setMessage(\"\");\n  }\n\n\n  //Submit changes to database\n  const onSubmitAccountSave = async e => {\n    e.preventDefault();\n    const newAccount = {\n      ...selectedAccount.data(),\n      displayName: updatedDisplayName,\n      pronouns\n    }\n    await set(selectedAccount.id, newAccount);\n    setMessage(\"update successful\");\n  }\n\n  const onEnterNewEmail = e => {\n    setNewEmail(e.target.value);\n    setMessage(\"\");\n  }\n  const revealEmailUpdate = e => {\n    setShowUpdateEmail(!showUpdateEmail)\n  }\n  const onEnterPw = e => {\n    setpw(e.target.value);\n  }\n  const onSubmitNewEmail = async e => {\n    //TODO: create check for recent sign-in and prompt for credentials if needed\n    // const credential = promptForCredentials();\n\n    const response = await updateUserEmail(newEmail, pw);\n    switch (response.valid) {\n      case false:\n        alert(response.message);\n        break;\n      case null:\n        setShowCredentialReq(true)\n        break;\n      case true:\n        alert(\"success\");\n        break;\n      default:\n        alert(response.message);\n        break;\n    }\n\n  }\n  //HTML\n  if (!selectedAccount) return <div>Loading...</div>;\n  return (\n    <div>\n      <form onSubmit={onSubmitAccountSave}>\n        <label>Display name</label>\n        <input type=\"text\" value={updatedDisplayName} onChange={onChageDisplayName}></input>\n        <div>\n          <label>Pronouns</label>\n          <input type=\"text\" value={pronouns} onChange={onChagePronouns}></input>\n        </div>\n        <input type=\"submit\" value=\"Save\"></input>\n      </form>\n      <hr></hr>\n      <form onSubmit={onSubmitNewEmail}>\n        <input type=\"button\" onClick={revealEmailUpdate} value=\"Change account email\"></input>\n        {showUpdateEmail && (<div>\n          <label>Enter new email</label>\n          <input autoFocus value={newEmail} onChange={onEnterNewEmail}></input>\n          <input type=\"submit\" value=\"Submit\"></input>\n          {showCredentialReq && (<div>\n            <label>Confirm password to continue</label>\n            <div>\n              <input autoFocus type=\"password\" value={pw} onChange={onEnterPw}></input>\n              <input type=\"submit\" value=\"Confirm\"></input>\n            </div>\n          </div>)\n          }\n        </div>)\n        }\n      </form>\n      <div>{message}</div>\n    </div>\n  )\n}\n\nexport default Account;\n","import React from 'react'\nimport Box from '@mui/material/Box';\nimport CoalitionPanel from '../coalition/CoalitionPanel';\nconst Home = () => {\n  return (\n    <Box >\n      <div>Home</div>\n      <CoalitionPanel />\n    </Box>\n  )\n}\n\nexport default Home","import { createUserWithEmailAndPassword, getAuth, onAuthStateChanged, signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState, useEffect } from 'react';\nimport { create } from \"../user/api\";\n\nfunction LoginPanel() {\n  const auth = getAuth();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState();\n  const [loginErrorMessage, setLoginErrorMessage] = useState();\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setIsMounted( true);               // note mutable flag\n    // someAsyncOperation().then(data => {\n    //   if (isMounted) setState(data);    // add conditional check\n    // })\n    return () => { setIsMounted(false) }; // cleanup toggles value, if unmounted\n  }, []);  \n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      //const uid = user.uid;\n      if (isMounted)  setLoggedInUser(user);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      if (isMounted)  setLoggedInUser(null);\n    }\n  });\n  const createAccount = () => {\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(async (userCredential) => {\n        // Signed in \n        // const user = userCredential.user;\n        // ...\n        await create(userCredential.user.uid)\n      })\n      .catch((error) => {\n        //const errorCode = error.code;\n        const errorMessage = error.message;\n        setLoginErrorMessage(errorMessage);\n        // ..\n      });\n\n  }\n  const signIn = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in \n        //const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        //const errorCode = error.code;\n        const errorMessage = error.message;\n        setLoginErrorMessage(errorMessage);\n      });\n\n  }\n  const changeEmail = (e) => {\n    setEmail(e.target.value);\n  }\n  const changePassword = (e) => {\n    setPassword(e.target.value);\n  }\n  return (\n    <div>\n      {loggedInUser &&\n        <div>{loggedInUser.email}</div>\n      }\n      {(!loggedInUser) && \"no user\"}\n      <form>\n        <input placeholder=\"email\" onChange={changeEmail}></input>\n        <input type=\"password\" placeholder=\"password\" autoComplete=\"on\" onChange={changePassword}></input>\n        <input type=\"button\" onClick={signIn} value=\"Sign In\"></input>\n        <input type=\"button\" onClick={createAccount} value=\"Create New User\"></input>\n      </form>\n      <div>{loginErrorMessage}</div>\n    </div>\n  )\n}\n\nexport default LoginPanel\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport React, { useState } from 'react';\nimport LoginPanel from './LogInPanel';\n\nfunction AuthPanel() {\nconst auth = getAuth();\n  const [loggedInUser, setLoggedInUser] = useState();\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      //const uid = user.uid;\n      setLoggedInUser(user);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      setLoggedInUser(null);\n    }\n  });\n\n  return (\n    <div>\n      {loggedInUser &&\n        // <LoggedIn />\n        <div></div>\n      }\n      {(!loggedInUser) &&\n        <LoginPanel />\n      }\n    </div>\n  )\n}\n\nexport default AuthPanel\n","import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport React, { useState } from 'react';\nimport AuthPanel from './AuthPanel';\n\nconst AuthWrapper = (props) => {\n  const auth = getAuth();\n  const [loggedInUser, setLoggedInUser] = useState();\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      //const uid = user.uid;\n      setLoggedInUser(user);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      setLoggedInUser(null);\n    }\n  });\n  return (\n    <div>\n      <div>\n        <AuthPanel />\n      </div>\n      <div>\n        {loggedInUser && props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default AuthWrapper\n","const defaultApiKey = \"AIzaSyAfQe2YjUh4yxN6Ax0ooIIgvb9RHGDTTKw\";\nconst defaultAppId = \"1:1016116125256:web:21badede89212eb844027d\";\nconst apiKey = ( window._env_ && window._env_.FIREBASE_API_KEY) || defaultApiKey;\nconst appId = ( window._env_ && window._env_.FIREBASE_APP_ID) || defaultAppId;\nconst firebaseConfig = {\n  apiKey,\n  authDomain: \"coalition-ba367.firebaseapp.com\",\n  projectId: \"coalition-ba367\",\n  storageBucket: \"coalition-ba367.appspot.com\",\n  messagingSenderId: \"1016116125256\",\n  appId\n};\n\nexport default firebaseConfig;","import { initializeApp } from \"firebase/app\";\nimport React from 'react';\nimport firebaseConfig from './FirebaseConfig';\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst FirebaseApp = ({ children }) => {\n\n\n  return (\n    <div>\n      {app && children}\n    </div>\n  )\n}\n\nexport default FirebaseApp\n","import React, { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport Divider from '@mui/material/Divider';\n//const pages = ['My Coalitions', 'Search', 'Admin', 'Help'];\nconst pageLinks = [\n  { text: 'Search', value: 'browse' },\n  { text: 'Admin', value: 'admin' },\n  { text: 'Help', value: 'rules' },\n  { text: 'Dashboard', value: 'dashboard' },\n  { text: 'Code', value: 'https://github.com/eyarham/coalition', isExternal: true }];\n//const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\nconst settingLinks = [\n  { text: 'Account', value: 'account' },\n  { text: 'Admin', value: 'admin' },\n  { text: 'Logout', value: 'logout' }];\n\n\nconst ResponsiveAppBar = () => {\n  const navigate = useNavigate();\n\n  const auth = getAuth();\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const [userInitial, setUserInitial] = React.useState(null);\n\n  const [loggedInUser, setLoggedInUser] = useState();\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      //const uid = user.uid;\n      setLoggedInUser(user);\n      setUserInitial(user.email.charAt(0))\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      setLoggedInUser(null);\n    }\n  });\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = (e) => {\n    setAnchorElNav(null);\n  };\n\n\n  // const handleNavSelect = (e) => {\n  //   var destination = e.target.value;\n  //   navigate('/' + destination);\n  // }\n  const navigateToSelected = (destination, isExternal) => {\n    if (isExternal) { window.open(destination, '_blank') }\n    else {\n      navigate('/' + destination);\n    }\n  }\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            Coalition\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pageLinks.map((page) => (\n                <MenuItem key={page.value} onClick={() => navigateToSelected(page.value, page.isExternal)}>\n                  <Typography textAlign=\"center\">{page.text}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            COALITION\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pageLinks.map((page) => (\n              <Button\n                key={page.value}\n                onClick={() => navigateToSelected(page.value, page.isExternal)}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.text}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar>{userInitial}</Avatar>\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {loggedInUser &&\n                <MenuItem>{loggedInUser.email}</MenuItem>\n              }\n              <Divider />\n              {settingLinks.map((setting) => (\n                <MenuItem key={setting.value} onClick={() => navigateToSelected(setting.value, setting.isExternal)}>\n                  <Typography textAlign=\"center\">{setting.text}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","import React from 'react';\nimport { Outlet } from \"react-router-dom\";\nimport AuthWrapper from '../auth/AuthWrapper';\nimport FirebaseApp from '../firebase/FirebaseApp';\nimport UserContextProvider from '../user/UserContextProvider';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MenuAppBar from './MenuAppBar';\n\nconst Layout = () => {\n  return (\n    <div className=\"App\">\n      <FirebaseApp>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <AuthWrapper>\n          <UserContextProvider>\n            <div>\n              <MenuAppBar />\n              {/* <MainMenu /> */}\n              <Outlet />\n            </div>\n          </UserContextProvider>\n        </AuthWrapper>\n      </FirebaseApp>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react';\nimport { Route, Routes } from \"react-router-dom\";\nimport Admin from '../admin/Admin';\nimport Logout from '../auth/Logout';\nimport Browse from '../browse/Browse';\nimport CoalitionPage from '../coalition/CoalitionPage';\nimport CoalitionPanel from '../coalition/CoalitionPanel';\nimport Invite from '../invite/Invite';\nimport RulesPage from '../rules/RulesPage';\nimport Account from '../user/Account';\nimport Home from './Home';\nimport Layout from './Layout';\n\nconst Router = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/invite\" element={<Invite />} />\n        <Route path=\"/account\" element={<Account />} />\n        <Route path=\"/coalition/:coalitionId\" element={<CoalitionPage />} />\n        <Route path=\"/browse\" element={<Browse />} />\n        <Route path=\"/admin\" element={<Admin />} />\n        <Route path=\"/rules\" element={<RulesPage />} />\n        <Route path=\"/dashboard\" element={<CoalitionPanel />} />\n        <Route path=\"/logout\" element={<Logout />} />\n\n      </Route>\n    </Routes>\n  )\n}\n\nexport default Router\n","import './App.css';\nimport Router from './_common/Router';\n\nfunction App() {\n  return (\n    <Router />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}